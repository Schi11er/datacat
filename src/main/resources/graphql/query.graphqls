type CatalogItemStatistics {
    id: ID!
    count: Int!
}

type CatalogStatistics {
    items: [CatalogItemStatistics!]!
}

type SearchResultConnection {
    nodes: [Concept!]!
    pageInfo: PageInfo!
    totalElements: Int!
}

interface Entity {
    id: ID!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

input LocaleInput {
    languageTag: ID!
}

type Language {
    id: String!
    languageTag: String!
    displayCountry(input: LocaleInput): String!
    displayLanguage(input: LocaleInput): String!
}

type LocalizedText {
    language: Language!
    text: String!
}

type Tag {
    id: ID!
    scope: String!
    localizedName: String!
    names: [LocalizedText!]!
    localizedDescription: String
    descriptions: [LocalizedText!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

type TagConnection {
    nodes: [Tag!]!
    pageInfo: PageInfo!
    totalElements: Int!
}

type HierarchyPayload {
    nodes: [Concept!]!
    paths: [[ID!]!]!
}

# Xtd misc

extend interface Concept {
    tags: [Tag!]!
}

extend type Translation {
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdExternalDocument implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend interface XtdRoot implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

# XtdObjects

extend interface XtdObject implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdActivity implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdActor implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdClassification implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdMeasureWithUnit implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdProperty implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdSubject implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdUnit implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdValue implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend interface XtdCollection implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdBag implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdNest implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend interface XtdRelationship implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssignsCollections implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssignsMeasures implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssignsProperties implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssignsPropertyWithValues implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssignsUnits implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssignsValues implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelCollects implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelDocuments implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelAssociates implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelGroups implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelSequences implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelSpecializes implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelComposes implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

extend type XtdRelActsUpon implements Entity {
    tags: [Tag!]!
    created: String!
    createdBy: String!
    lastModified: String!
    lastModifiedBy: String!
}

# inputs

enum EntityTypes {
    XtdExternalDocument
    XtdRoot
    XtdObject
    XtdActivity
    XtdActor
    XtdClassification
    XtdMeasureWithUnit
    XtdProperty
    XtdSubject
    XtdUnit
    XtdValue
    XtdCollection
    XtdBag
    XtdNest
    XtdRelationship
    XtdRelActsUpon
    XtdRelAssignsCollections
    XtdRelAssignsMeasures
    XtdRelAssignsProperties
    XtdRelAssignsPropertyWithValues
    XtdRelAssignsUnit
    XtdRelAssignsValues
    XtdRelAssociates
    XtdRelClassifies
    XtdRelCollects
    XtdRelComposes
    XtdRelDocuments
    XtdRelGroups
    XtdRelSequences
    XtdRelSpecializes
}

input EntryTypeFilterInput {
    in: [EntryType!]
}

input TagFilterInput {
    in: [ID!]
}

input EntryFilterInput {
    entryType: EntryTypeFilterInput
    tags: TagFilterInput
}

input SearchInput {
    query: String
    filters: [EntryFilterInput!]
    entityTypeIn: [EntityTypes!]
    entityTypeNotIn: [EntityTypes!]
    idIn: [ID!]
    idNotIn: [ID!]
    tagged: [ID!]
    pageNumber: Int
    pageSize: Int
}

input HierarchyRootNodeFilterInput {
    entryTypeIn: [EntryType!]
    entryTypeNotIn: [EntryType!]
    idIn: [ID!]
    idNotIn: [ID!]
    tagged: [ID!]
}

input HierarchyFilterInput {
    rootNodeFilter: HierarchyRootNodeFilterInput!
}

input FilterInput {
    query: String
    idIn: [ID!]
    idNotIn: [ID!]
    tagged: [ID!]
    pageNumber: Int
    pageSize: Int
}

# Query type

input LanguageFilterInput {
    query: String
    excludeLanguageTags: [String!]
}

type LanguageConnection {
    nodes: [Language!]!
    pageInfo: PageInfo!
    totalElements: Int!
}

type Query {
    languages(input: LanguageFilterInput): LanguageConnection

    statistics: CatalogStatistics!

    node(id: ID!): Entity

    objectById(id: ID!): XtdObject @deprecated

    collectionById(id: ID!): XtdCollection @deprecated

    relationshipById(id: ID!): XtdRelationship @deprecated

    search(input: SearchInput): SearchResultConnection!

    hierarchy(input: HierarchyFilterInput!): HierarchyPayload!

    tag(id: ID!): Tag!
    tags(input: FilterInput): TagConnection!

    externalDocument(id: ID!): XtdExternalDocument
    externalDocuments(input: FilterInput): XtdExternalDocumentConnection!

    actor(id: ID!): XtdActor
    actors(input: FilterInput): XtdActorConnection!

    activity(id: ID!): XtdActivity
    activities(input: FilterInput): XtdActivityConnection!

    classification(id: ID!): XtdClassification
    classifications(input: FilterInput): XtdClassificationConnection!

    measure(id: ID!): XtdMeasureWithUnit
    measures(input: FilterInput): XtdMeasureWithUnitConnection!

    property(id: ID!): XtdProperty
    properties(input: FilterInput): XtdPropertyConnection!

    subject(id: ID!): XtdSubject
    subjects(input: FilterInput): XtdSubjectConnection!

    unit(id: ID!): XtdUnit
    units(input: FilterInput): XtdUnitConnection!

    value(id: ID!): XtdValue
    values(input: FilterInput): XtdValueConnection!

    bag(id: ID!): XtdBag
    bags(input: FilterInput): XtdBagConnection!

    nest(id: ID!): XtdNest
    nests(input: FilterInput): XtdNestConnection!

    assignsCollectionRelation(id: ID!): XtdRelAssignsCollections
    assignsCollectionsRelations(input: FilterInput): XtdRelAssignsCollectionsConnection!

    assignsPropertyWithValuesRelation(id: ID!): XtdRelAssignsPropertyWithValues
    assignsPropertyWithValuesRelations(input: FilterInput): XtdRelAssignsPropertyWithValuesConnection!

    documetsRelation(id: ID!): XtdRelDocuments
    documentsRelations(input: FilterInput): XtdRelDocumentsConnection!

    collectsRelation(id: ID!): XtdRelCollects
    collectsRelations(input: FilterInput): XtdRelCollectsConnection!

    associatesRelation(id: ID!): XtdRelAssociates
    associatesRelations(input: FilterInput): XtdRelAssociatesConnection!

    groupsRelation(id: ID!): XtdRelGroups
    groupsRelations(input: FilterInput): XtdRelGroupsConnection!

    specialiesRelation(id: ID!): XtdRelSpecializes
    specializesRelations(input: FilterInput): XtdRelSpecializesConnection!

    composesRelation(id: ID!): XtdRelComposes
    composesRelations(input: FilterInput): XtdRelComposesConnection!

    actsUponRelation(id: ID!): XtdRelActsUpon
    actsUponRelations(input: FilterInput): XtdRelActsUponConnection!
}
