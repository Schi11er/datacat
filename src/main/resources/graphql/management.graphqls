enum SimpleRecordType {
    ExternalDocument
    Property
    Subject
    Unit
    Value
    OrderedValue
    ValueList
    Language
    Dimension
    Rational
    MultiLanguageText
    Text
    Symbol
    Interval
    Dictionary
    QuantityKind
    Country
    Subdivision
    # RelationshipToSubject
    # RelationshipToProperty
}

enum CatalogRecordType {
    ExternalDocument
    Property
    Subject
    Unit
    Value
    OrderedValue
    ValueList
    Language
    Dimension
    Rational
    MultiLanguageText
    Text
    Symbol
    Interval
    Dictionary
    QuantityKind
    Country
    Subdivision
}

enum RelationshipRecordType {
    AmountOfSubstanceExponent
    BoundaryValues
    Coefficient
    CountryOfOrigin
    DateOfCreation
    DateOfPublication
    Definition
    DeprecationExplanation
    Descriptions
    Dictionary
    Dimension
    ElectricCurrentExponent
    Examples
    Languages
    Language
    LanguageOfCreator
    LengthExponent
    LuminousIntensityExponent
    MassExponent
    Maximum
    Minimum
    Name
    Names
    Offset
    OrderedValues
    PossibleValues
    Properties
    QuantityKinds
    ReferenceDocuments
    RelationshipToProperty
    RelationshipToSubject
    RelationshipType
    ReplacedObjects
    ScopeSubjects
    SimilarTo
    Subject
    Subdivisions
    Symbols
    Symbol
    TargetProperties
    TargetSubjects
    Texts
    ThermodynamicTemperatureExponent
    TimeExponent
    Units
    Unit
    Values
    Value
}

union SimpleRecord =
    XtdExternalDocument
    | XtdSubject
    | XtdProperty
    | XtdUnit
    | XtdValue
    | XtdValueList
    | XtdOrderedValue
    | XtdLanguage
    | XtdDimension
    | XtdRational
    | XtdMultiLanguageText
    | XtdText
    | XtdSymbol
    | XtdInterval
    | XtdDictionary
    | XtdQuantityKind
    | XtdCountry
    | XtdSubdivision
    | XtdRelationshipToSubject
    | XtdRelationshipToProperty

input UnitInput {
    scale: XtdUnitScaleEnum
    base: XtdUnitBaseEnum
}

input PropertyInput {
    dataType: XtdDataTypeEnum
    dataFormat: String
}

input ExternalDocumentInput {
    uri: String
    author: String
    isbn: String
    publisher: String
}

input CountryInput {
    code: String
}

input ValueInput {
    nominalValue: String
}

input OrderedValueInput {
    order: Int
}

input IntervalInput {
    minimumIncluded: Boolean
    maximumIncluded: Boolean
}

input LanguageInput {
    englishName: String
    nativeName: String
    code: String
    comments: [String!]
}

input TextInput {
    text: String
}

input RelationshipToPropertyInput {
    relationshipType: XtdPropertyRelationshipTypeEnum
}

input PropertiesInput {
    id: ID
    majorVersion: Int
    minorVersion: Int
    status: XtdStatusOfActivationEnum
    names: [TranslationInput!]
    descriptions: [TranslationInput!]
    comments: [TranslationInput!]
    propertyProperties: PropertyInput
    unitProperties: UnitInput
    externalDocumentProperties: ExternalDocumentInput
    countryProperties: CountryInput
    subdivisionProperties: CountryInput
    valueProperties: ValueInput
    orderedValueProperties: OrderedValueInput
    intervalProperties: IntervalInput
    languageProperties: LanguageInput
    textProperties: TextInput
}

input RelationshipPropertiesInput {
    id: ID
    majorVersion: Int
    minorVersion: Int
    status: XtdStatusOfActivationEnum
    names: [TranslationInput!]!
    descriptions: [TranslationInput!]
    comments: [TranslationInput!]
    relationshipToPropertyProperties: RelationshipToPropertyInput
}

input CreateCatalogEntryInput {
    catalogEntryType: SimpleRecordType!
    properties: PropertiesInput!
    tags: [ID!]
}

input DeleteCatalogEntryInput {
    catalogEntryId: ID!
}

type CreateCatalogEntryPayload {
    catalogEntry: SimpleRecord
}

type DeleteCatalogEntryPayload {
    catalogEntry: SimpleRecord
}

input CreateRelationshipInput {
    relationshipType: RelationshipRecordType!
    properties: RelationshipPropertiesInput
    fromId: ID!
    toIds: [ID!]!
}

type CreateRelationshipPayload {
    catalogEntry: SimpleRecord
}

input DeleteRelationshipInput {
    relationshipType: RelationshipRecordType!
    fromId: ID!
    toId: ID!
}

type DeleteRelationshipPayload {
    catalogEntry: SimpleRecord
}

input DeleteObjectRelationshipInput {
    relationshipId: ID!
}

type DeleteObjectRelationshipPayload {
    relationship: SimpleRecord
}

input TranslationInput {
    id: ID
    languageTag: ID!
    value: String!
}

input TranslationUpdateInput {
    translationId: ID!
    value: String!
}

input AddNameInput {
    catalogEntryId: ID!
    name: TranslationInput!
}

input UpdateNameInput {
    nameId: ID!
    value: String!
}

input DeleteNameInput {
    nameId: ID!
}

type AddNamePayload {
    catalogEntry: SimpleRecord
}

type UpdateNamePayload {
    catalogEntry: SimpleRecord
}

type DeleteNamePayload {
    catalogEntry: SimpleRecord
}

input AddDescriptionInput {
    catalogEntryId: ID!
    description: TranslationInput!
}

input UpdateDescriptionInput {
    descriptionId: ID!
    value: String!
}

input DeleteDescriptionInput {
    descriptionId: ID!
}

type AddDescriptionPayload {
    catalogEntry: SimpleRecord
}

type UpdateDescriptionPayload {
    catalogEntry: SimpleRecord
}

type DeleteDescriptionPayload {
    catalogEntry: SimpleRecord
}

input AddCommentInput {
    catalogEntryId: ID!
    comment: TranslationInput!
}

input UpdateCommentInput {
    commentId: ID!
    value: String!
}

input DeleteCommentInput {
    commentId: ID!
}

type AddCommentPayload {
    catalogEntry: SimpleRecord
}

type UpdateCommentPayload {
    catalogEntry: SimpleRecord
}

type DeleteCommentPayload {
    catalogEntry: SimpleRecord
}

input CreateTagInput {
    tagId: ID
    name: String!
}

type CreateTagPayload {
    tag: Tag
}

input UpdateTagInput {
    tagId: ID!
    name: String!
}

type UpdateTagPayload {
    tag: Tag
}

input DeleteTagInput {
    tagId: ID!
}

type DeleteTagPayload {
    tag: Tag
}

input AddTagInput {
    catalogEntryId: ID!
    tagId: ID!
}

type AddTagPayload {
    catalogEntry: SimpleRecord
    tag: Tag
}

input RemoveTagInput {
    catalogEntryId: ID!
    tagId: ID!
}

type RemoveTagPayload {
    catalogEntry: SimpleRecord
    tag: Tag
}

enum XtdDataTypeEnum {
    XTD_BOOLEAN
    XTD_INTEGER
    XTD_RATIONAL
    XTD_REAL
    XTD_COMPLEX
    XTD_STRING
    XTD_DATETIME
}

enum XtdPropertyRelationshipTypeEnum {
    XTD_DEPENDS
    XTD_SPECIALIZES
}

enum XtdRelationshipKindEnum {
    XTD_INSTANCE_LEVEL
    XTD_SCHEMA_LEVEL
}

enum XtdUnitBaseEnum {
    XTD_ONE
    XTD_TWO
    XTD_E
    XTD_PI
    XTD_TEN
}

enum XtdUnitScaleEnum {
    XTD_LINEAR 
    XTD_LOGARITHMIC
}

enum XtdStatusOfActivationEnum {
    XTD_ACTIVE
    XTD_INACTIVE
}

type Mutation {

    # Creates a new catalog entry of the defined entry type.
    createCatalogEntry(input: CreateCatalogEntryInput!): CreateCatalogEntryPayload

    # Deletes the entry from the catalog.
    deleteCatalogEntry(input: DeleteCatalogEntryInput!): DeleteCatalogEntryPayload

    # Creates a relationship originating from the given catalog entry.
    # The related entries must be added with subsequent requests.
    createRelationship(input: CreateRelationshipInput!): CreateRelationshipPayload

    # Deletes a relationship between catalog entries.
    deleteObjectRelationship(input: DeleteObjectRelationshipInput!): DeleteObjectRelationshipPayload

    # Deletes a relationship between catalog entries.
    deleteRelationship(input: DeleteRelationshipInput!): DeleteRelationshipPayload

    # Adds a localized name to the given catalog entry.
    addName(input: AddNameInput!): AddNamePayload

    # Updates the localized name of the given catalog entry.
    updateName(input: UpdateNameInput!): UpdateNamePayload

    # Delete the localized name of the given catalog entry.
    # Throws an error if the entry would end up unnamed.
    deleteName(input: DeleteNameInput!): DeleteNamePayload

    # Adds a localized description to the given catalog entry.
    addDescription(input: AddDescriptionInput!): AddDescriptionPayload

    # Updates a localized description of the given catalog entry.
    updateDescription(input: UpdateDescriptionInput!): UpdateDescriptionPayload

    # Deletes a localized description from the catalog entry.
    deleteDescription(input: DeleteDescriptionInput!): DeleteDescriptionPayload

    # Adds a localized comment to the given catalog entry.
    addComment(input: AddCommentInput!): AddCommentPayload

    # Updates a localized comment of the given catalog entry.
    updateComment(input: UpdateCommentInput!): UpdateCommentPayload

    # Deletes a localized comment from the catalog entry.
    deleteComment(input: DeleteCommentInput!): DeleteCommentPayload

    # Creates a new user defined tag.
    createTag(input: CreateTagInput!): CreateTagPayload

    # Updates an existing user defined tag.
    updateTag(input: UpdateTagInput!): UpdateTagPayload

    # Deletes an existing user defined tag.
    deleteTag(input: DeleteTagInput!): DeleteTagPayload

    # Tags a concept entity with the given user defined tag.
    addTag(input: AddTagInput!): AddTagPayload

    # Removes a tag from an existing user defined tag.
    removeTag(input: RemoveTagInput!): RemoveTagPayload
}
