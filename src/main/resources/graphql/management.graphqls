enum CatalogEntryType {
    Actor
    Activity
    Bag
    Classification
    ExternalDocument
    Measure
    Nest
    Subject
    Property
    Unit
    Value
}

union CatalogEntry =
    | XtdActor
    | XtdActivity
    | XtdBag
    | XtdClassification
    | XtdExternalDocument
    | XtdMeasureWithUnit
    | XtdNest
    | XtdSubject
    | XtdProperty
    | XtdUnit
    | XtdValue

input VersionInput {
    versionId: String
    versionDate: String
}

input PropertiesInput {
    id: ID
    version: VersionInput
    names: [TranslationInput!]!
    descriptions: [TranslationInput!]
}

input CreateCatalogEntryInput {
    catalogEntryType: CatalogEntryType!
    properties: PropertiesInput!
    tags: [ID!]
}

input DeleteCatalogEntryInput {
    catalogEntryId: ID!
}

type CreateCatalogEntryPayload {
    catalogEntry: CatalogEntry
}

type DeleteCatalogEntryPayload {
    catalogEntry: CatalogEntry
}

enum OneToOneRelationshipType {
    Sequences
}

union OneToOneRelationship =
    | XtdRelSequences

input CreateOneToOneRelationshipInput {
    relationshipType: OneToOneRelationshipType!
    properties: PropertiesInput
    from: ID!
    to: ID!
}

type CreateOneToOneRelationshipPayload {
    relationship: OneToOneRelationship
}

enum OneToManyRelationshipType {
    ActsUpon
    AssignsCollections
    AssignsMeasures
    AssignsProperties
    AssignsUnits
    AssignsValues
    Associates
    Collects
    Composes
    Documents
    Groups
    Specializes
}

union OneToManyRelationship =
    | XtdRelActsUpon
    | XtdRelAssignsCollections
    | XtdRelAssignsMeasures
    | XtdRelAssignsProperties
    | XtdRelAssignsUnits
    | XtdRelAssignsValues
    | XtdRelAssociates
    | XtdRelCollects
    | XtdRelComposes
    | XtdRelDocuments
    | XtdRelGroups
    | XtdRelSpecializes

input CreateOneToManyRelationshipInput {
    relationshipType: OneToManyRelationshipType!
    properties: PropertiesInput
    from: ID!
    to: [ID!]!
}

type CreateOneToManyRelationshipPayload {
    relationship: OneToManyRelationship
}

enum QualifiedOneToOneRelationshipType {
    AssignsPropertyWithValues
}

union QualifiedOneToOneRelationship =
    | XtdRelAssignsPropertyWithValues

input CreateQualifiedOneToOneRelationshipInput {
    relationshipType: QualifiedOneToOneRelationshipType!
    properties: PropertiesInput
    from: ID!
    to: ID!
    with: [ID!]!
}

type CreateQualifiedOneToOneRelationshipPayload {
    relationship: QualifiedOneToOneRelationship
}

union Relationship =
    | XtdRelActsUpon
    | XtdRelAssignsCollections
    | XtdRelAssignsMeasures
    | XtdRelAssignsProperties
    | XtdRelAssignsPropertyWithValues
    | XtdRelAssignsUnits
    | XtdRelAssignsValues
    | XtdRelAssociates
    | XtdRelCollects
    | XtdRelComposes
    | XtdRelDocuments
    | XtdRelGroups
    | XtdRelSequences
    | XtdRelSpecializes

input DeleteRelationshipInput {
    id: ID!
}

type DeleteRelationshipPayload {
    relationship: Relationship
}

input SetVersionInput {
    catalogEntryId: ID!
    version: VersionInput!
}

type SetVersionPayload {
    catalogEntry: CatalogEntry
}

input TranslationInput {
    id: ID
    languageTag: ID!
    value: String!
}

input TranslationUpdateInput {
    translationId: ID!
    value: String!
}

input AddNameInput {
    catalogEntryId: ID!
    name: TranslationInput!
}

input UpdateNameInput {
    catalogEntryId: ID!
    name: TranslationUpdateInput!
}

input DeleteNameInput {
    catalogEntryId: ID!
    nameId: ID!
}

type AddNamePayload {
    catalogEntry: CatalogEntry
}

type UpdateNamePayload {
    catalogEntry: CatalogEntry
}

type DeleteNamePayload {
    catalogEntry: CatalogEntry
}

input AddDescriptionInput {
    catalogEntryId: ID!
    description: TranslationInput!
}

input UpdateDescriptionInput {
    catalogEntryId: ID!
    description: TranslationUpdateInput!
}

input DeleteDescriptionInput {
    catalogEntryId: ID!
    descriptionId: ID!
}

type AddDescriptionPayload {
    catalogEntry: CatalogEntry
}

type UpdateDescriptionPayload {
    catalogEntry: CatalogEntry
}

type DeleteDescriptionPayload {
    catalogEntry: CatalogEntry
}

enum ToleranceType {
    Realvalue
    Percentage
}

input ToleranceInput {
    toleranceType: ToleranceType!
    lowerTolerance: String
    upperTolerance: String
}

input SetToleranceInput {
    valueId: ID!
    tolerance: ToleranceInput!
}

type SetTolerancePayload {
    catalogEntry: XtdValue
}

input UnsetToleranceInput {
    valueId: ID!
}

type UnsetTolerancePayload {
    catalogEntry: XtdValue
}

enum ValueRole {
    Nominal
    Maximum
    Minimum
}

enum ValueType {
    String
    Number
    Integer
    Real
    Boolean
    Logical
}

input NominalValueInput {
    valueRole: ValueRole!
    valueType: ValueType!
    nominalValue: String
}

input SetNominalValueInput {
    valueId: ID!
    nominalValue: NominalValueInput!
}

type SetNominalValuePayload {
    catalogEntry: XtdValue
}

input UnsetNominalValueInput {
    valueId: ID!
}

type UnsetNominalValuePayload {
    catalogEntry: XtdValue
}

input CreateTagInput {
    name: String!
}

type CreateTagPayload {
    tag: Tag
}

input UpdateTagInput {
    tagId: ID!
    name: String!
}

type UpdateTagPayload {
    tag: Tag
}

input DeleteTagInput {
    tagId: ID!
}

type DeleteTagPayload {
    tag: Tag
}

input AddTagInput {
    catalogEntryId: ID!
    tagId: ID!
}

type AddTagPayload {
    catalogEntry: CatalogEntry
    tag: Tag
}

input RemoveTagInput {
    catalogEntryId: ID!
    tagId: ID!
}

type RemoveTagPayload {
    catalogEntry: CatalogEntry
    tag: Tag
}

type Mutation {

    # Creates a new catalog entry of the defined entry type.
    createCatalogEntry(input: CreateCatalogEntryInput!): CreateCatalogEntryPayload

    # Deletes the entry from the catalog.
    deleteCatalogEntry(input: DeleteCatalogEntryInput!): DeleteCatalogEntryPayload

    # Creates a relationship between two related catalog entries.
    createOneToOneRelationship(input: CreateOneToOneRelationshipInput!): CreateOneToOneRelationshipPayload

    # Creates a relationship between a catalog entry and one or many related entries.
    createOneToManyRelationship(input: CreateOneToManyRelationshipInput!): CreateOneToManyRelationshipPayload

    # Creates a relationship between two related catalog entries that is further described by the
    # relation with one or many qualifing catalog entries.
    createQualifiedOneToManyRelationship(input: CreateQualifiedOneToOneRelationshipInput!): CreateQualifiedOneToOneRelationshipPayload

    # Deletes a relationship between catalog entries.
    deleteRelationship(input: DeleteRelationshipInput!): DeleteRelationshipPayload

    # Sets a new version for the given catalog entry.
    # There is no policy in place dictating the versioning scheme as it is
    # regarded domain specific.
    setVersion(input: SetVersionInput!): SetVersionPayload

    # Adds a localized name to the given catalog entry.
    addName(input: AddNameInput!): AddNamePayload

    # Updates the localized name of the given catalog entry.
    updateName(input: UpdateNameInput!): UpdateNamePayload

    # Delete the localized name of the given catalog entry.
    # Throws an error if the entry would end up unnamed.
    deleteName(input: DeleteNameInput!): DeleteNamePayload

    # Adds a localized description to the given catalog entry.
    addDescription(input: AddDescriptionInput!): AddDescriptionPayload

    # Updates a localized description of the given catalog entry.
    updateDescription(input: UpdateDescriptionInput!): UpdateDescriptionPayload

    # Deletes a localized description from the catalog entry.
    deleteDescription(input: DeleteDescriptionInput!): DeleteDescriptionPayload

    # Sets the tolerance component of a value entry.
    setTolerance(input: SetToleranceInput!): SetTolerancePayload

    # Unsets the tolerance component of a value entry.
    unsetTolerance(input: UnsetToleranceInput!): UnsetTolerancePayload

    # Sets the nominale value component of a value entry.
    setNominalValue(input: SetNominalValueInput!): UnsetNominalValuePayload

    # Unsets the nominal value component of a value entry.
    unsetNominalValue(input: UnsetNominalValueInput!): UnsetNominalValuePayload

    # Creates a new user defined tag.
    createTag(input: CreateTagInput!): CreateTagPayload

    # Updates an existing user defined tag.
    updateTag(input: UpdateTagInput!): UpdateTagPayload

    # Deletes an existing user defined tag.
    deleteTag(input: DeleteTagInput!): DeleteTagPayload

    # Tags a concept entity with the given user defined tag.
    addTag(input: AddTagInput!): AddTagPayload

    # Removes a tag from an existing user defined tag.
    removeTag(input: RemoveTagInput!): RemoveTagPayload
}
